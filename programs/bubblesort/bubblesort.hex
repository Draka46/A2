00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 000B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 000B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 000B                  #      ret %r11
0000004e :                       #  init_allocator:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A40030020000          #      leaq allocator_base, %rax
0000005c : A4B038020000          #      leaq cur_allocator, %r11
00000062 : 390B                  #      movq %rax, (%r11)
00000064 : 31B7                  #      movq (%rsp), %r11
00000066 : 507008000000          #      addq $8, %rsp
0000006c : 000B                  #      ret %r11
0000006e :                       #  allocate:
0000006e :                       #  .LFB4:
0000006e : 517008000000          #      subq $8, %rsp
00000074 : 39B7                  #      movq %r11, (%rsp)
00000076 : A4B038020000          #      leaq cur_allocator, %r11
0000007c : 310B                  #      movq (%r11), %rax
0000007e : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000081 : A4B038020000          #      leaq cur_allocator, %r11
00000087 : 393B                  #      movq %rdx, (%r11)
00000089 : 31B7                  #      movq (%rsp), %r11
0000008b : 507008000000          #      addq $8, %rsp
00000091 : 000B                  #      ret %r11
00000093 :                       #  get_random_array:
00000093 :                       #  .LFB5:
00000093 : 517028000000          #      subq $40, %rsp
00000099 : 7DB720000000          #      movq %r11, 32(%rsp)
0000009f : 7DD718000000          #      movq %r13, 24(%rsp)
000000a5 : 7DC710000000          #      movq %r12, 16(%rsp)
000000ab : 7D4708000000          #      movq %rbp, 8(%rsp)
000000b1 : 3917                  #      movq %rbx, (%rsp)
000000b3 : 21C6                  #      movq %rdi, %r12
000000b5 : 4EB06e000000          #      call allocate, %r11
000000bb : 21D0                  #      movq %rax, %r13
000000bd : 641000000000          #      movq $0, %ebx
000000c3 : 4F00e8000000          #      jmp .L7
000000c9 :                       #  .L8:
000000c9 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000000d0 : 640000000000          #      movq $0, %eax
000000d6 : 4EB01a000000          #      call gen_random, %r11
000000dc : 7D0400000000          #      movq %rax, 0(%rbp)
000000e2 : 501001000000          #      addq $1, %rbx
000000e8 :                       #  .L7:
000000e8 : 461Cc9000000          #      cbg %r12, %rbx, .L8
000000ee : 210D                  #      movq %r13, %rax
000000f0 : 3117                  #      movq (%rsp), %rbx
000000f2 : 754708000000          #      movq 8(%rsp), %rbp
000000f8 : 75C710000000          #      movq 16(%rsp), %r12
000000fe : 75D718000000          #      movq 24(%rsp), %r13
00000104 : 75B720000000          #      movq 32(%rsp), %r11
0000010a : 507028000000          #      addq $40, %rsp
00000110 : 000B                  #      ret %r11
00000112 :                       #  sort:
00000112 :                       #  .LFB6:
00000112 : 517008000000          #      subq $8, %rsp
00000118 : 39B7                  #      movq %r11, (%rsp)
0000011a : 64A000000000          #      movq $0, %r10d
00000120 : 4F004e010000          #      jmp .L11
00000126 :                       #  .L13:
00000126 : 500001000000          #      addq $1, %rax
0000012c :                       #  .L12:
0000012c : 45064c010000          #      cble %rdi, %rax, .L16
00000132 : 9385A3                #      leaq (%rsi, %r10, 8), %r8
00000135 : 3128                  #      movq (%r8), %rcx
00000137 : 933503                #      leaq (%rsi, %rax, 8), %rdx
0000013a : 3193                  #      movq (%rdx), %r9
0000013c : 472926010000          #      cbge %r9, %rcx, .L13
00000142 : 3998                  #      movq %r9, (%r8)
00000144 : 3923                  #      movq %rcx, (%rdx)
00000146 : 4F0026010000          #      jmp .L13
0000014c :                       #  .L16:
0000014c : 21AB                  #      movq %r11, %r10
0000014e :                       #  .L11:
0000014e : 45A662010000          #      cble %rdi, %r10, .L17
00000154 : A5BA01000000          #      leaq 1(%r10), %r11
0000015a : 210B                  #      movq %r11, %rax
0000015c : 4F002c010000          #      jmp .L12
00000162 :                       #  .L17:
00000162 : 31B7                  #      movq (%rsp), %r11
00000164 : 507008000000          #      addq $8, %rsp
0000016a : 000B                  #      ret %r11
0000016c :                       #  print_array:
0000016c :                       #  .LFB7:
0000016c : 517020000000          #      subq $32, %rsp
00000172 : 7DB718000000          #      movq %r11, 24(%rsp)
00000178 : 7DC710000000          #      movq %r12, 16(%rsp)
0000017e : 7D4708000000          #      movq %rbp, 8(%rsp)
00000184 : 3917                  #      movq %rbx, (%rsp)
00000186 : 2146                  #      movq %rdi, %rbp
00000188 : 21C5                  #      movq %rsi, %r12
0000018a : 641000000000          #      movq $0, %ebx
00000190 : 4F00a7010000          #      jmp .L19
00000196 :                       #  .L20:
00000196 : 93BC13                #      leaq (%r12, %rbx, 8), %r11
00000199 : 316B                  #      movq (%r11), %rdi
0000019b : 4EB034000000          #      call write_long, %r11
000001a1 : 501001000000          #      addq $1, %rbx
000001a7 :                       #  .L19:
000001a7 : 461496010000          #      cbg %rbp, %rbx, .L20
000001ad : 3117                  #      movq (%rsp), %rbx
000001af : 754708000000          #      movq 8(%rsp), %rbp
000001b5 : 75C710000000          #      movq 16(%rsp), %r12
000001bb : 75B718000000          #      movq 24(%rsp), %r11
000001c1 : 507020000000          #      addq $32, %rsp
000001c7 : 000B                  #      ret %r11
000001c9 :                       #  run:
000001c9 :                       #  .LFB8:
000001c9 : 517018000000          #      subq $24, %rsp
000001cf : 7DB710000000          #      movq %r11, 16(%rsp)
000001d5 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001db : 3917                  #      movq %rbx, (%rsp)
000001dd : 640000000000          #      movq $0, %eax
000001e3 : 4EB04e000000          #      call init_allocator, %r11
000001e9 : 640000000000          #      movq $0, %eax
000001ef : 4EB000000000          #      call read_long, %r11
000001f5 : 2110                  #      movq %rax, %rbx
000001f7 : 2160                  #      movq %rax, %rdi
000001f9 : 4EB093000000          #      call get_random_array, %r11
000001ff : 2140                  #      movq %rax, %rbp
00000201 : 2150                  #      movq %rax, %rsi
00000203 : 2161                  #      movq %rbx, %rdi
00000205 : 4EB012010000          #      call sort, %r11
0000020b : 2154                  #      movq %rbp, %rsi
0000020d : 2161                  #      movq %rbx, %rdi
0000020f : 4EB06c010000          #      call print_array, %r11
00000215 : 3117                  #      movq (%rsp), %rbx
00000217 : 754708000000          #      movq 8(%rsp), %rbp
0000021d : 75B710000000          #      movq 16(%rsp), %r11
00000223 : 507018000000          #      addq $24, %rsp
00000229 : 000B                  #      ret %r11
0000022b :                       #  .LFE0:
0000022b :                       #  .LFE1:
0000022b :                       #  .LFE2:
0000022b :                       #  .LFE3:
0000022b :                       #  .LFE4:
0000022b :                       #  .LFE5:
0000022b :                       #  .LFE6:
0000022b :                       #  .LFE7:
0000022b :                       #  .LFE8:
00000230 : 0000000000000000      #      .comm allocator_base,8,8
00000238 : 0000000000000000      #      .comm cur_allocator,8,8
